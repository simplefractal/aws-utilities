# Setup:
#   1. Name your service. This will prefix all functions
#      service: alp-bot will produce functions named
#        alp-bot-dev-charge-cards
#        alp-bot-prod-send-report
#   2. Update your folder name and package:include to match #1
#   3. Give your first function (and its handler) a name!
#   4. Rename new_function.py  
#   5. Type `serverless print` to check your final serverless.yml output

# hyphens are the only allowed special character
service: service-folder-name

provider:
  name: aws
  runtime: python3.6
  role: ${file(../../templates/base_python.yml):provider.role}
  vpc: ${file(../../templates/base_python.yml):provider.vpc}
  
plugins: ${file(../../templates/base_python.yml):plugins}
package: ${file(../../templates/base_python.yml):package}

custom: # create or load in additional custom blocks as necessary.
  pythonRequirements: ${file(../../templates/base_python.yml):custom.pythonRequirements}
  enabled: ${file(../../templates/base_python.yml):custom.enabled}

# Before adding new functions, ask yourself:
# Is this function a reusable service?
# Then break it out with `make python name=new_service_name`
# If it is closely related to the functions below, go ahead and add it here.
functions:
  new_function:
    handler: handler.new_function_handler
    memorySize: 2048 # Raise or lower as necessary.
    timeout: 300 # In seconds. Max 900 
    package:
      include:
        - service-folder-name/**
        # - ../../common/s3_utils.py # include any imported utilities
    # environment:
      # VARIABLE: ${env:${opt:stage, 'dev'}_VARIABLE} # this syntax sources dev_VARIABLE or prod_VARIABLE from your postactivate depending on --stage option
